{"version":3,"sources":["store/selector/employee.js","components/employee/employee-form/index.jsx","store/action/employee.js","components/employee/employee-dialog/index.jsx","components/employee/leaves-dialog/index.jsx","pages/home/index.jsx","pages/index.jsx","store/reducer/employee.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["selectEmployees","state","employeeReducer","employees","validationSchema","yup","email","required","firstName","lastName","mobileNo","dob","EmployeeForm","onClose","initialValues","edit","dispatch","useDispatch","useSelector","useFormik","enableReinitialize","onSubmit","formValues","data","find","x","Error","validateEmployee","_id","payload","type","createEmployeeAction","Math","round","random","err","window","alert","message","values","handleSubmit","handleBlur","touched","errors","handleChange","dirty","isValid","TextField","placeholder","name","fullWidth","margin","value","onBlur","helperText","error","Boolean","onChange","moment","format","Box","marginTop","display","justifyContent","Button","variant","color","disableRipple","disableElevation","style","marginRight","onClick","disabled","EmployeeDialog","props","Dialog","DialogTitle","fontWeight","DialogContent","EmployeeLeaveDialog","employeeId","leaves","id","selectEmployeLeaves","List","map","leave","i","ListItem","secondaryAction","IconButton","confirm","filter","Delete","ListItemText","primary","date","HomePage","useState","open","setOpen","setEdit","leaveId","setLeaveId","Container","flex","flexDirection","paddingY","alignItems","Typography","startIcon","Add","element","size","Edit","deleteEmployeeAction","secondary","String","Root","exact","path","component","mockEmployees","toDate","getMockLeaves","Array","fill","subtract","initialState","reduce","prev","curr","EmployeeReducer","index","findIndex","updated","rootReducer","combineReducers","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wWAAaA,EAAkB,SAACC,GAAD,OAAWA,EAAMC,gBAAgBC,W,OCS1DC,EAAmBC,IAAW,CAChCC,MAAOD,MAAaC,MAAM,iBAAiBC,SAAS,qBACpDC,UAAWH,MAAaE,SAAS,0BACjCE,SAAUJ,MAAaE,SAAS,yBAChCG,SAAUL,MAAaE,SAAS,yBAChCI,IAAKN,MAAWE,SAAS,+BAGtB,SAASK,EAAT,GAAyD,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,cAAeC,EAAQ,EAARA,KAC7CC,EAAWC,cACXd,EAAYe,YAAYlB,GAF6B,EAYiCmB,YAAU,CAClGL,gBAAeV,mBAAkBgB,oBAAoB,EAAMC,SAAU,SAACC,GAClE,KAViB,SAACC,GAEtB,GADwBpB,EAAUqB,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,QAAUiB,EAAKjB,OAASmB,EAAEf,WAAaa,EAAKb,YAEtF,MAAM,IAAIgB,MAAM,6CAQZC,CAAiBL,GAEbN,EADAD,GC7Bea,ED8Bad,EAAcc,IC9BtBC,ED8BO,eAAyBP,GC9BnB,CAAEQ,KAAM,gBAAiBD,QAAS,CAAED,MAAKL,KAAMM,KAJhE,SAACA,GAAD,MAAc,CAAEC,KAAM,kBAAmBD,WDoChDE,CAAqB,2BAAKT,GAAN,IAAkBM,IAAKI,KAAKC,MAAsB,IAAhBD,KAAKE,cAExErB,IACF,MAAOsB,GACLC,OAAOC,MAAMF,EAAIG,SCpCC,IAACV,EAAKC,KDyB5BU,EAZmD,EAYnDA,OAAQC,EAZ2C,EAY3CA,aAAcC,EAZ6B,EAY7BA,WAAYC,EAZiB,EAYjBA,QAASC,EAZQ,EAYRA,OAAQC,EAZA,EAYAA,aAAcC,EAZd,EAYcA,MAAOC,EAZrB,EAYqBA,QAgBhF,OACI,uBAAMzB,SAAUmB,EAAhB,UACI,cAACO,EAAA,EAAD,CAAWC,YAAY,aAAaC,KAAK,YAAYC,WAAS,EAACC,OAAO,QAAQC,MAAOb,EAAO/B,UAAW6C,OAAQZ,EAC3Ga,WAAYZ,EAAQlC,WAAamC,EAAOnC,UACxC+C,MAAOb,EAAQlC,WAAagD,QAAQb,EAAOnC,WAAYiD,SAAUb,IACrE,cAACG,EAAA,EAAD,CAAWC,YAAY,YAAYE,WAAS,EAACC,OAAO,QAAQC,MAAOb,EAAO9B,SAAUwC,KAAK,WAAWI,OAAQZ,EACxGa,WAAYZ,EAAQjC,UAAYkC,EAAOlC,SACvC8C,MAAOb,EAAQjC,UAAY+C,QAAQb,EAAOlC,UAAWgD,SAAUb,IACnE,cAACG,EAAA,EAAD,CAAWC,YAAY,QAAQE,WAAS,EAACC,OAAO,QAAQC,MAAOb,EAAOjC,MAAO2C,KAAK,QAAQI,OAAQZ,EAC9Fa,WAAYZ,EAAQpC,OAASqC,EAAOrC,MACpCiD,MAAOb,EAAQpC,OAASkD,QAAQb,EAAOrC,OAAQmD,SAAUb,IAC7D,cAACG,EAAA,EAAD,CAAWC,YAAY,gBAAgBE,WAAS,EAACC,OAAO,QAAQrB,KAAK,SAASsB,MAAOb,EAAO7B,SAAUuC,KAAK,WAAWI,OAAQZ,EAC1Ha,WAAYZ,EAAQhC,UAAYiC,EAAOjC,SACvC6C,MAAOb,EAAQhC,UAAY8C,QAAQb,EAAOjC,UAAW+C,SAAUb,IACnE,cAACG,EAAA,EAAD,CAAWjB,KAAK,OAAOsB,MAAOM,IAAOnB,EAAO5B,KAAKgD,OAAO,cAAeT,WAAS,EAACC,OAAO,QAAQF,KAAK,MAAMI,OAAQZ,EAC/Ga,WAAYZ,EAAQ/B,KAAOgC,EAAOhC,IAClC4C,MAAOb,EAAQ/B,KAAO6C,QAAQb,EAAOhC,KAAM8C,SAAUb,IACzD,eAACgB,EAAA,EAAD,CAAKC,UAAW,EAAGC,QAAQ,OAAOC,eAAe,WAAjD,UACI,cAACC,EAAA,EAAD,CAAQlC,KAAK,SAASmC,QAAQ,YAAYC,MAAM,QAAQC,eAAa,EAACC,kBAAgB,EAACC,MAAO,CAAEC,YAAa,IAAMC,QAAS1D,EAA5H,mBAGA,cAACmD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,eAAa,EAACC,kBAAgB,EAACtC,KAAK,SAAS0C,UAAW3B,IAAUC,EAA9G,SACK/B,EAAO,OAAS,iB,uCEhE9B,SAAS0D,EAAT,GAA6C,IAAnB1D,EAAkB,EAAlBA,KAAS2D,EAAS,wBAC/C,OACI,eAACC,EAAA,EAAD,2BAAYD,GAAZ,IAAmBxB,WAAS,EAA5B,UACI,cAAC0B,EAAA,EAAD,CAAaP,MAAO,CAAEQ,WAAY,QAAlC,SACK9D,EAAO,gBAAkB,oBAE9B,cAAC+D,EAAA,EAAD,UACI,cAAClE,EAAD,CAAcC,QAAS6D,EAAM7D,QAASC,cAAeC,EAAI,eAAQA,GAAS,CAAEP,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAID,SAAU,GAAIJ,MAAO,IAAMS,OAAQA,U,WCH9J,SAASgE,EAAT,GAAwD,IAAzBC,EAAwB,EAAxBA,WAAeN,EAAS,8BACpD1D,EAAWC,cACXgE,EAAS/D,aAAY,SAACjB,GAAD,OJPI,SAACA,EAAOiF,GAAR,OAAejF,EAAMC,gBAAgB+E,OAAOC,IAAO,GIO5CC,CAAoBlF,EAAO+E,MASjE,OACI,eAACL,EAAA,EAAD,2BAAYD,GAAZ,IAAmBxB,WAAS,EAA5B,UACI,cAAC0B,EAAA,EAAD,CAAaP,MAAO,CAAEQ,WAAY,QAAlC,6BAGA,cAACC,EAAA,EAAD,UACI,cAACM,EAAA,EAAD,UACKH,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,cAACC,EAAA,EAAD,CAAUtB,MAAM,UAAkBuB,gBAC9B,cAACC,EAAA,EAAD,CAAYxB,MAAM,QAAQK,QAAS,kBAhBrC3C,EAgBwD0D,EAAM1D,SAfjEQ,OAAOuD,QAAQ,yCAE1B3E,EFRmC,CAAEc,KAAM,eAAgBD,QEQhC,eAAGmD,EAAaC,EAAOW,QAAO,SAAAnE,GAAC,OAAIA,EAAEG,MAAQA,QACxE8C,EAAM7D,YAJO,IAACe,GAgBE,SACI,cAACiE,EAAA,EAAD,MAFR,SAKI,cAACC,EAAA,EAAD,CAAcC,QAAO,qBAAgBrC,IAAO4B,EAAMU,MAAMrC,OAAO,mBALpC4B,cCdhD,SAASU,IAAY,IAAD,EACCC,oBAAS,GADV,mBAChBC,EADgB,KACVC,EADU,OAECF,mBAAS,MAFV,mBAEhBnF,EAFgB,KAEVsF,EAFU,OAGOH,mBAAS,IAHhB,mBAGhBI,EAHgB,KAGPC,EAHO,KAIjBpG,EAAYe,YAAYlB,GACxBgB,EAAWC,cAgCjB,OACI,eAACuF,EAAA,EAAD,WACI,eAAC5C,EAAA,EAAD,CAAKE,QAAQ,OAAO2C,KAAM,EAAGC,cAAc,SAASC,SAAU,EAA9D,UACI,eAAC/C,EAAA,EAAD,CAAKE,QAAQ,OAAO8C,WAAW,SAAS7C,eAAe,gBAAvD,UACI,cAAC8C,EAAA,EAAD,CAAYhC,WAAW,OAAOZ,QAAQ,KAAtC,iCACA,cAACD,EAAA,EAAD,CAAQ8C,UAAW,cAACC,EAAA,EAAD,IAASxC,QA5BpB,WACpB8B,EAAQ,MACRD,GAAQ,IA0B0DnC,QAAQ,YAAYC,MAAM,UAAUE,kBAAgB,EAACD,eAAa,EAAxH,uBAGJ,cAACP,EAAA,EAAD,UACI,cAACwB,EAAA,EAAD,UACKjF,EAAUkF,KAAI,SAAC2B,EAASzB,GAAV,OACX,cAACC,EAAA,EAAD,CAAoCC,gBAChC,eAAC7B,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAQE,MAAM,UAAUD,QAAQ,YAAYE,eAAa,EAACC,kBAAgB,EAAC6C,KAAK,QAAQ1C,QAAS,kBArBzGW,EAqB8H8B,EAAQpF,SApB1J2E,EAAWrB,GADQ,IAACA,GAqBQ,oBAGA,cAACQ,EAAA,EAAD,CAAYxB,MAAM,UAAUK,QAAS,kBAlC9ChD,EAkCkEyF,EAjCrFZ,GAAQ,QACRC,EAAQ9E,GAFU,IAACA,GAkCS,SACI,cAAC2F,EAAA,EAAD,MAEJ,cAACxB,EAAA,EAAD,CAAYxB,MAAM,QAAQK,QAAS,kBAjD7CW,EAiDgE8B,EAAQpF,SAhD3EQ,OAAOuD,QAAQ,0CAE1B3E,EHpBwB,SAACkE,GAAD,MAAS,CAAEpD,KAAM,kBAAmBD,QAASqD,GGoB5DiC,CAAqBjC,KAHjB,IAACA,GAiDU,SACI,cAACW,EAAA,EAAD,SATZ,SAaI,cAACC,EAAA,EAAD,CAAcC,QAAO,UAAKR,EAAI,EAAT,aAAeyB,EAAQxG,UAAvB,YAAoCwG,EAAQvG,SAA5C,aAAyDiD,IAAOsD,EAAQrG,KAAKgD,OAAO,cAApF,KAAsGyD,UAAS,UAAKJ,EAAQ1G,MAAb,cAAwB0G,EAAQtG,aAbzJ2G,OAAOL,EAAQpF,gBAoB9C,cAAC6C,EAAD,CAAgB0B,KAAMA,EAAMtF,QA5CjB,WACfuF,GAAQ,GACRC,EAAQ,OA0C6CtF,KAAMA,IACvD,cAACgE,EAAD,CAAqBoB,OAAQG,EAASzF,QApCtB,WACpB0F,EAAW,KAmCyDvB,WAAYsB,OC5EzE,SAASgB,IACpB,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,Q,qBCP3CyB,EAAgB,CAClB,CACI9F,IAAK,UACLpB,UAAW,SACXC,SAAU,YACVH,MAAO,mBACPI,SAAU,aACVC,IAAK+C,IAAO,cAAciE,WAIlC,SAASC,EAAc1C,GACnB,OAAO,IAAI2C,MAAM,GAAGC,KAAK,GAAGzC,KAAI,iBAAO,CACnCW,KAAMtC,MAASqE,SAAS/F,KAAKC,MAAsB,GAAhBD,KAAKE,UAAgB,OACxD8C,WAAYE,EACZtD,IAAKyF,OAAOrF,KAAKC,MAAsB,IAAhBD,KAAKE,eAIpC,IAAM8F,EAAe,CACjB7H,UAAWuH,EACXzC,OAAQyC,EAAcO,QAAO,SAACC,EAAMC,GAEhC,OADAD,EAAKC,EAAKvG,KAAOgG,EAAcO,EAAKvG,KAC7BsG,IACR,KA2CQE,EAxCS,WAA8C,IAA7CnI,EAA4C,uDAApC+H,EAAoC,yCAApBlG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACnD,OAAQC,GACJ,IAAK,kBACD,OAAO,2BACA7B,GADP,IAEIE,UAAWF,EAAME,UAAUyF,QAAO,SAAAnE,GAAC,OAAIA,EAAEG,MAAQC,OAEzD,IAAK,kBACD,OAAO,2BACA5B,GADP,IAEIE,UAAU,CAAE0B,GAAH,mBAAe5B,EAAME,YAC9B8E,OAAO,2BACAhF,EAAMgF,QADP,kBAEDpD,EAAQD,IAAMgG,EAAc/F,EAAQD,SAGjD,IAAK,gBACD,IAAMyG,EAAQpI,EAAME,UAAUmI,WAAU,SAAA7G,GAAC,OAAIA,EAAEG,MAAQC,EAAQD,OACzD2G,EAAO,YAAOtI,EAAME,WAK1B,OAJAoI,EAAQF,GAAR,2BACOxG,EAAQN,MADf,IAEIK,IAAKC,EAAQD,MAEV,2BACA3B,GADP,IAEIE,UAAU,YAAKoI,KAEvB,IAAK,eACD,OAAO,2BACAtI,GADP,IAEIgF,OAAO,2BACAhF,EAAMgF,QACNpD,KAGf,QACI,OAAO5B,IC7DbuI,EAAcC,YAAgB,CAChCvI,gBAAiBkI,IAGRM,EAAQC,YAAYH,GCKlBI,MARf,WACE,OACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACE,cAACpB,EAAD,OCISuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9751b88c.chunk.js","sourcesContent":["export const selectEmployees = (state) => state.employeeReducer.employees;\n\nexport const selectEmployeLeaves = (state, id) => state.employeeReducer.leaves[id] || [];","import { Button, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as yup from 'yup';\nimport { createEmployeeAction, editEmployeeAction } from \"../../../store/action\";\nimport { selectEmployees } from \"../../../store/selector\";\n\nconst validationSchema = yup.object({\n    email: yup.string().email('Invalid email').required('Email is required'),\n    firstName: yup.string().required('First Name is required'),\n    lastName: yup.string().required('Last Name is required'),\n    mobileNo: yup.number().required('Mobile no is required'),\n    dob: yup.date().required('Date of birth is required')\n})\n\nexport function EmployeeForm({ onClose, initialValues, edit }) {\n    const dispatch = useDispatch();\n    const employees = useSelector(selectEmployees);\n\n    const validateEmployee = (data) => {\n        const isAlreadyExists = employees.find(x => x.email === data.email || x.mobileNo === data.mobileNo);\n        if (isAlreadyExists) {\n            throw new Error('Employee already exists with this details');\n        }\n        return true;\n    }\n\n    const { values, handleSubmit, handleBlur, touched, errors, handleChange, dirty, isValid } = useFormik({\n        initialValues, validationSchema, enableReinitialize: true, onSubmit: (formValues) => {\n            try {\n                validateEmployee(formValues);\n                if (edit) {\n                    dispatch(editEmployeeAction(initialValues._id, { ...formValues }))\n                } else {\n                    dispatch(createEmployeeAction({ ...formValues, _id: Math.round(Math.random() * 10000000) }))\n                }\n                onClose();\n            } catch (err) {\n                window.alert(err.message);\n            }\n\n        }\n    })\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField placeholder=\"First Name\" name=\"firstName\" fullWidth margin=\"dense\" value={values.firstName} onBlur={handleBlur}\n                helperText={touched.firstName && errors.firstName}\n                error={touched.firstName && Boolean(errors.firstName)} onChange={handleChange} />\n            <TextField placeholder=\"Last Name\" fullWidth margin=\"dense\" value={values.lastName} name=\"lastName\" onBlur={handleBlur}\n                helperText={touched.lastName && errors.lastName}\n                error={touched.lastName && Boolean(errors.lastName)} onChange={handleChange} />\n            <TextField placeholder=\"Email\" fullWidth margin=\"dense\" value={values.email} name=\"email\" onBlur={handleBlur}\n                helperText={touched.email && errors.email}\n                error={touched.email && Boolean(errors.email)} onChange={handleChange} />\n            <TextField placeholder=\"Mobile Number\" fullWidth margin=\"dense\" type=\"number\" value={values.mobileNo} name=\"mobileNo\" onBlur={handleBlur}\n                helperText={touched.mobileNo && errors.mobileNo}\n                error={touched.mobileNo && Boolean(errors.mobileNo)} onChange={handleChange} />\n            <TextField type=\"date\" value={moment(values.dob).format('YYYY-MM-DD')} fullWidth margin=\"dense\" name=\"dob\" onBlur={handleBlur}\n                helperText={touched.dob && errors.dob}\n                error={touched.dob && Boolean(errors.dob)} onChange={handleChange} />\n            <Box marginTop={2} display=\"flex\" justifyContent=\"flex-end\">\n                <Button type=\"button\" variant=\"contained\" color=\"error\" disableRipple disableElevation style={{ marginRight: 16 }} onClick={onClose}>\n                    Close\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" disableRipple disableElevation type=\"submit\" disabled={!dirty || !isValid}>\n                    {edit ? 'Edit' : \"Create\"}\n                </Button>\n            </Box>\n        </form>\n    )\n}","export const createEmployeeAction = (payload) => ({ type: 'CREATE_EMPLOYEE', payload });\n\nexport const deleteEmployeeAction = (id) => ({ type: 'DELETE_EMPLOYEE', payload: id });\n\nexport const editEmployeeAction = (_id, payload) => ({ type: 'EDIT_EMPLOYEE', payload: { _id, data: payload } })\n\nexport const deleteLeaveAction = (payload) => ({ type: \"DELETE_LEAVE\", payload })","import { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { EmployeeForm } from '../employee-form';\n\nexport function EmployeeDialog({ edit, ...props }) {\n    return (\n        <Dialog {...props} fullWidth>\n            <DialogTitle style={{ fontWeight: 'bold' }}>\n                {edit ? 'Edit Employee' : 'Create Employee'}\n            </DialogTitle>\n            <DialogContent>\n                <EmployeeForm onClose={props.onClose} initialValues={edit ? { ...edit } : { firstName: '', lastName: '', dob: '', mobileNo: '', email: '' }} edit={!!edit} />\n            </DialogContent>\n\n        </Dialog>\n    )\n}","import { Delete } from \"@mui/icons-material\";\nimport { Dialog, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemText } from \"@mui/material\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteLeaveAction } from \"../../../store/action\";\nimport { selectEmployeLeaves } from \"../../../store/selector\";\n\nexport function EmployeeLeaveDialog({ employeeId, ...props }) {\n    const dispatch = useDispatch();\n    const leaves = useSelector((state) => selectEmployeLeaves(state, employeeId));\n\n    const handleDelete = (_id) => {\n        const answer = window.confirm('Are you sure you want to delete it?');\n        if (answer) {\n            dispatch(deleteLeaveAction({ [employeeId]: leaves.filter(x => x._id !== _id) }))\n            props.onClose();\n        }\n    }\n    return (\n        <Dialog {...props} fullWidth>\n            <DialogTitle style={{ fontWeight: 'bold' }}>\n                Employee Leaves\n            </DialogTitle>\n            <DialogContent>\n                <List>\n                    {leaves.map((leave, i) => (\n                        <ListItem color=\"#1e90ff\" key={i} secondaryAction={(\n                            <IconButton color=\"error\" onClick={() => handleDelete(leave._id)}>\n                                <Delete />\n                            </IconButton>\n                        )}>\n                            <ListItemText primary={`- Leave on ${moment(leave.date).format('DD MMM YYYY')}`} />\n                        </ListItem>\n                    ))}\n\n                </List>\n            </DialogContent>\n\n        </Dialog>\n    )\n}","import { useState } from \"react\";\n\nimport { Add, Delete, Edit } from \"@mui/icons-material\";\nimport { Button, Container, IconButton, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from 'moment';\n\nimport { EmployeeDialog, EmployeeLeaveDialog } from \"../../components/employee\";\nimport { selectEmployees } from '../../store/selector';\nimport { deleteEmployeeAction } from \"../../store/action\";\n\nexport function HomePage() {\n    const [open, setOpen] = useState(false);\n    const [edit, setEdit] = useState(null);\n    const [leaveId, setLeaveId] = useState('');\n    const employees = useSelector(selectEmployees);\n    const dispatch = useDispatch();\n\n    const handleDelete = (id) => {\n        const answer = window.confirm('Are you sure you want to delete this?');\n        if (answer) {\n            dispatch(deleteEmployeeAction(id))\n        }\n    }\n\n    const openCreateModal = () => {\n        setEdit(null);\n        setOpen(true);\n    }\n\n    const openEditModal = (data) => {\n        setOpen(true);\n        setEdit(data);\n    }\n\n    const closeModal = () => {\n        setOpen(false);\n        setEdit(null);\n    }\n\n    const openLeaveModal = (id) => {\n        setLeaveId(id);\n    }\n\n    const closeLeaveModal = () => {\n        setLeaveId('');\n    }\n\n    return (\n        <Container>\n            <Box display=\"flex\" flex={1} flexDirection=\"column\" paddingY={4}>\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                    <Typography fontWeight=\"bold\" variant=\"h5\">Employee Management</Typography>\n                    <Button startIcon={<Add />} onClick={openCreateModal} variant=\"contained\" color=\"primary\" disableElevation disableRipple>Create</Button>\n                </Box>\n\n                <Box>\n                    <List>\n                        {employees.map((element, i) => (\n                            <ListItem key={String(element._id)} secondaryAction={(\n                                <Box>\n                                    <Button color=\"primary\" variant=\"contained\" disableRipple disableElevation size=\"small\" onClick={() => openLeaveModal(element._id)}>\n                                        Leaves\n                                    </Button>\n                                    <IconButton color=\"primary\" onClick={() => openEditModal(element)}>\n                                        <Edit />\n                                    </IconButton>\n                                    <IconButton color=\"error\" onClick={() => handleDelete(element._id)}>\n                                        <Delete />\n                                    </IconButton>\n                                </Box>\n                            )}>\n                                <ListItemText primary={`${i + 1}. ${element.firstName} ${element.lastName} (${moment(element.dob).format('DD-MM-YYYY')})`} secondary={`${element.email} - ${element.mobileNo}`} />\n\n                            </ListItem>\n                        ))}\n                    </List>\n                </Box>\n            </Box>\n            <EmployeeDialog open={open} onClose={closeModal} edit={edit} />\n            <EmployeeLeaveDialog open={!!leaveId} onClose={closeLeaveModal} employeeId={leaveId} />\n        </Container>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { HomePage } from './home';\n\nexport default function Root() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n            </Switch>\n        </BrowserRouter>\n    )\n}","import moment from \"moment\"\n\nconst mockEmployees = [\n    {\n        _id: \"1234567\",\n        firstName: 'Riddhi',\n        lastName: 'Prajapati',\n        email: 'riddhi@gmail.com',\n        mobileNo: '9999999999',\n        dob: moment('05-12-1999').toDate(),\n    }\n]\n\nfunction getMockLeaves(id) {\n    return new Array(5).fill(0).map(() => ({\n        date: moment().subtract(Math.round(Math.random() * 30), 'day'),\n        employeeId: id,\n        _id: String(Math.round(Math.random() * 10000000))\n    }))\n}\n\nconst initialState = {\n    employees: mockEmployees,\n    leaves: mockEmployees.reduce((prev, curr) => {\n        prev[curr._id] = getMockLeaves(curr._id)\n        return prev;\n    }, {}),\n}\n\nconst EmployeeReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'DELETE_EMPLOYEE':\n            return {\n                ...state,\n                employees: state.employees.filter(x => x._id !== payload)\n            }\n        case 'CREATE_EMPLOYEE':\n            return {\n                ...state,\n                employees: [payload, ...state.employees],\n                leaves: {\n                    ...state.leaves,\n                    [payload._id]: getMockLeaves(payload._id)\n                }\n            }\n        case 'EDIT_EMPLOYEE':\n            const index = state.employees.findIndex(x => x._id === payload._id);\n            const updated = [...state.employees];\n            updated[index] = {\n                ...payload.data,\n                _id: payload._id,\n            }\n            return {\n                ...state,\n                employees: [...updated]\n            }\n        case 'DELETE_LEAVE':\n            return {\n                ...state,\n                leaves: {\n                    ...state.leaves,\n                    ...payload,\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default EmployeeReducer;","import { createStore, combineReducers } from 'redux';\n\nimport { EmployeeReducer } from './reducer';\n\nconst rootReducer = combineReducers({\n    employeeReducer: EmployeeReducer\n})\n\nexport const store = createStore(rootReducer);","import { Provider } from \"react-redux\";\n\nimport Root from \"./pages\";\nimport { store } from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Root />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}